/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scorereader;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.nio.file.Files;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.bytedeco.javacpp.opencv_core;
import scorereader.abc.Parser;
import scorereader.components.images.ScrollDemo;
import scorereader.server.Server;
import scorereader.structure.Figura;
import scorereader.structure.Nota;
import scorereader.structure.claves.Pauta;

/**
 *
 * @author ascarneiro
 */
public class ScoreReader extends javax.swing.JFrame {

    private boolean loadTreino = false;
    public boolean removeuLinhas = false;
    private static int incremento = 20;
    private ScrollDemo boundedPanel = new ScrollDemo();
    private ScrollDemo barPanel = new ScrollDemo();
    private ScrollDemo notesPanel = new ScrollDemo();
    private ScrollDemo originalPanel = new ScrollDemo();
    private ScrollDemo individualPanel = new ScrollDemo();
    private ScrollDemo segmentadosPanel = new ScrollDemo();
    private ScrollDemo distribuicaoPanel = new ScrollDemo();

    public static String CAMINHO_DEFAULT = "C:\\Users\\ascarneiro\\Desktop\\TCC\\ScoreReader\\repository\\Casos";
    public static String CAMINHO_TREINAMENTO = "C:\\Users\\ascarneiro\\Desktop\\TCC\\ScoreReader\\treinamento\\";
    public static String CAMINHO_DEBUG = "C:\\Users\\ascarneiro\\Desktop\\TCC\\ScoreReader\\debug\\";
    public static String CAMINHO_REPOSITORY = "C:\\Users\\ascarneiro\\Desktop\\TCC\\ScoreReader\\repository\\";
    public static String CAMINHO_NOTAS = "C:\\Users\\ascarneiro\\Desktop\\TCC\\ScoreReader\\notas\\";
    public String[] scoreDir = new String[]{""};
    public String resetar = "S";
    private ArrayList<Pauta> pautas = new ArrayList<>();
    private ArrayList<Figura> rotular = new ArrayList<>();
    private long tempoInicial = 0;
    //Compilar os elementos
    Parser parser = new Parser(this);

    private byte[] originalImage = null;

    private StringBuilder consoleContent = new StringBuilder();

    /**
     * Creates new form Main
     */
    public ScoreReader() {
        initComponents();
        loadPanels();

        try {
            originalImage = Utilities.bufferedImageToByteArray(ImageIO.read(new File(FILE_NAME.getText())));
        } catch (Exception e) {
            e.printStackTrace();
        }
        addImagemOriginal(FILE_NAME.getText());
        loadModelo();
        loadTrainValues();
        jSplitPane1.setDividerLocation(540);
        jSplitPane1.updateUI();
//        jButton1ActionPerformed(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        Panels = new javax.swing.JTabbedPane();
        Main = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jToggleButton4 = new javax.swing.JToggleButton();
        jLabel9 = new javax.swing.JLabel();
        MODELO = new javax.swing.JTextField();
        processar = new javax.swing.JToggleButton();
        Compilar = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        A = new javax.swing.JToggleButton();
        B = new javax.swing.JToggleButton();
        E = new javax.swing.JToggleButton();
        C = new javax.swing.JToggleButton();
        D = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        SERVER = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        D1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        debugFIles = new javax.swing.JCheckBox();
        debugImages = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        FILE_NAME = new javax.swing.JTextField();
        jToggleButton2 = new javax.swing.JToggleButton();
        original = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Container = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        segmentados = new javax.swing.JPanel();
        notes = new javax.swing.JPanel();
        bounded = new javax.swing.JPanel();
        bars = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        individual = new javax.swing.JPanel();
        fragmentos = new javax.swing.JPanel();
        treinamento = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        CAMINHO = new javax.swing.JTextField();
        STATUS = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        DS_NAME = new javax.swing.JTextField();
        jToggleButton3 = new javax.swing.JToggleButton();
        K = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jToggleButton5 = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        SEMIBREVE_SL = new javax.swing.JSlider();
        jLabel12 = new javax.swing.JLabel();
        SEMIBREVE = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        MINIMA = new javax.swing.JSpinner();
        MINIMA_SL = new javax.swing.JSlider();
        SEMINIMA_SL = new javax.swing.JSlider();
        jLabel15 = new javax.swing.JLabel();
        SEMINIMA = new javax.swing.JSpinner();
        COLCHEIA_SL = new javax.swing.JSlider();
        COLCHEIA = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        CLAVE_SOL_SL = new javax.swing.JSlider();
        CLAVE_SOL = new javax.swing.JSpinner();
        CLAVE_FA = new javax.swing.JSpinner();
        CLAVE_FA_SL = new javax.swing.JSlider();
        jLabel21 = new javax.swing.JLabel();
        CLAVE_DO = new javax.swing.JSpinner();
        CLAVE_DO_SL = new javax.swing.JSlider();
        jLabel22 = new javax.swing.JLabel();
        PAUSA_SEMIBREVE = new javax.swing.JCheckBox();
        PAUSA_MINIMAS = new javax.swing.JCheckBox();
        PAUSA_SEMINIMA = new javax.swing.JCheckBox();
        PAUSA_COLCHEIA = new javax.swing.JCheckBox();
        jLabel23 = new javax.swing.JLabel();
        SEMICOLCHEIA = new javax.swing.JSpinner();
        SEMICOLCHEIA_SL = new javax.swing.JSlider();
        PAUSA_SEMICOLCHEIA = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        NOME_MODELO = new javax.swing.JComboBox();
        DUMP = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();
        QT_BARRAS_COMPASSO = new javax.swing.JSpinner();
        BARRAS_COMPASSO_SL = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        FATOR = new javax.swing.JTextField();
        TIPO_MODELO = new javax.swing.JComboBox();
        TIPO_DISTRIBUICAO = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        distribuicao = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CONSOLE = new javax.swing.JTextArea();
        jToggleButton10 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Score Reader 1.0.0");

        jPanel4.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(550);
        jSplitPane1.setDividerSize(0);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        Panels.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        Panels.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Panels.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PanelsStateChanged(evt);
            }
        });

        Main.setMaximumSize(new java.awt.Dimension(0, 0));
        Main.setMinimumSize(new java.awt.Dimension(0, 0));
        Main.setPreferredSize(new java.awt.Dimension(0, 0));
        Main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Main.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToggleButton4.setText("...");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jToggleButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 57, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Score Reader 1.0.0");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 13, 390, -1));

        MODELO.setText("C:\\Users\\ascarneiro\\Desktop\\TCC\\ScoreReader\\treinamento\\DIGITAL_KNN_PADRAO.pkl");
        MODELO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MODELOActionPerformed(evt);
            }
        });
        jPanel2.add(MODELO, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 370, -1));

        processar.setText("Processar Conteudo Partitura");
        processar.setToolTipText("Faz o processamento dos elementos da pauta");
        processar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processarActionPerformed(evt);
            }
        });
        jPanel2.add(processar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 180, 30));

        Compilar.setText("Compilar");
        Compilar.setToolTipText("Compila o codigo ABC gerado pela acao do botao processar nos formatos (XHTML, SVG, PDF e MIDI)");
        Compilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompilarActionPerformed(evt);
            }
        });
        jPanel2.add(Compilar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 190, 30));

        jLabel6.setText("Formatos:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 50, 10));

        A.setText("ABC");
        A.setToolTipText("Abre arquivo ABC gerado");
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });
        jPanel2.add(A, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 120, 30));

        B.setText("XHTML");
        B.setToolTipText("Abre arquivo XHTML gerado");
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });
        jPanel2.add(B, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 130, 30));

        E.setText("SVG");
        E.setToolTipText("Abre arquivo SVG gerado");
        E.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EActionPerformed(evt);
            }
        });
        jPanel2.add(E, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, 120, 30));

        C.setText("PDF");
        C.setToolTipText("Abre arquivo PDF gerado");
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });
        jPanel2.add(C, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 120, 30));

        D.setText("MIDI");
        D.setToolTipText("Abre arquivo MIDI gerado");
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });
        jPanel2.add(D, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 290, 130, 30));

        jButton1.setText("Abrir Editor Imagens");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 180, 30));

        jButton4.setText("Rotular");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 190, 30));

        jLabel8.setText("Servidor:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        SERVER.setText("http://localhost:8091/");
        SERVER.setToolTipText("Informe aqui o endereco do servidor onde roda o Classificador");
        SERVER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SERVERActionPerformed(evt);
            }
        });
        SERVER.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SERVERKeyTyped(evt);
            }
        });
        jPanel2.add(SERVER, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 140, -1));

        jLabel11.setText("Modelo:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        D1.setText("MusicXML");
        D1.setToolTipText("Abre arquivo MIDI gerado");
        D1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D1ActionPerformed(evt);
            }
        });
        jPanel2.add(D1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 120, 30));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setToolTipText("Determina se serao geradas imagens para fins de debug e analise profunda");

        debugFIles.setSelected(true);
        debugFIles.setText("Files");
        debugFIles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                debugFIlesMouseClicked(evt);
            }
        });
        debugFIles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debugFIlesActionPerformed(evt);
            }
        });

        debugImages.setSelected(true);
        debugImages.setText("Imagens");
        debugImages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                debugImagesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(debugFIles, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(debugImages, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(debugImages)
                    .addComponent(debugFIles, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 370, 40));

        jLabel4.setText("Debug:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 50, -1));

        jLabel1.setText("Arquivo:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 49, -1));

        FILE_NAME.setText("C:\\Users\\ascarneiro\\Desktop\\TCC\\ScoreReader\\repository\\Casos\\Musicas\\Twk.png");
        FILE_NAME.setToolTipText("Caminho do arquivo de imagem de partitura");
        FILE_NAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FILE_NAMEActionPerformed(evt);
            }
        });
        jPanel2.add(FILE_NAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 370, -1));

        jToggleButton2.setText("...");
        jToggleButton2.setToolTipText("Abre janela para selecao de arquivo");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jToggleButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, 60, -1));

        Main.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 540, 490));

        original.setBackground(new java.awt.Color(255, 255, 255));
        original.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Imagem original ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N
        original.setMaximumSize(new java.awt.Dimension(10, 10));
        original.setOpaque(false);
        original.setPreferredSize(new java.awt.Dimension(10, 10));
        original.setLayout(new java.awt.BorderLayout());
        Main.add(original, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 1330, 490));

        Panels.addTab("Image", Main);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        Container.setMaximumSize(new java.awt.Dimension(10, 10));
        Container.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        segmentados.setBackground(new java.awt.Color(255, 255, 255));
        segmentados.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "2) Segmentar  elementos musicais encontradas ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N
        segmentados.setMaximumSize(new java.awt.Dimension(5, 5));
        segmentados.setMinimumSize(new java.awt.Dimension(5, 5));
        segmentados.setOpaque(false);
        segmentados.setPreferredSize(new java.awt.Dimension(5, 5));
        segmentados.setLayout(new java.awt.BorderLayout());
        jScrollPane4.setViewportView(segmentados);
        segmentados.getAccessibleContext().setAccessibleName("");

        Container.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 1890, 370));

        notes.setBackground(new java.awt.Color(255, 255, 255));
        notes.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "5) Detectar som musical dos elementos que parecem notas ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N
        notes.setMaximumSize(new java.awt.Dimension(10, 10));
        notes.setOpaque(false);
        notes.setPreferredSize(new java.awt.Dimension(10, 10));
        notes.setLayout(new java.awt.BorderLayout());
        Container.add(notes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1670, 1890, 460));

        bounded.setBackground(new java.awt.Color(255, 255, 255));
        bounded.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "1) Remover Linhas da pauta - Detectar  elementos musicais contidos na imagem ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N
        bounded.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bounded.setMaximumSize(new java.awt.Dimension(10, 10));
        bounded.setOpaque(false);
        bounded.setPreferredSize(new java.awt.Dimension(10, 10));
        bounded.setLayout(new java.awt.BorderLayout());
        Container.add(bounded, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1880, 410));
        bounded.getAccessibleContext().setAccessibleName("");

        bars.setBackground(new java.awt.Color(255, 255, 255));
        bars.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "3) Detectar altura das linhas da pauta ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N
        bars.setMaximumSize(new java.awt.Dimension(10, 10));
        bars.setOpaque(false);
        bars.setPreferredSize(new java.awt.Dimension(10, 10));
        bars.setLayout(new java.awt.BorderLayout());
        Container.add(bars, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 800, 1890, 437));

        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        individual.setBackground(new java.awt.Color(255, 255, 255));
        individual.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "4) Segmentar possiveis figuras encontradas ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N
        individual.setMaximumSize(new java.awt.Dimension(5, 5));
        individual.setMinimumSize(new java.awt.Dimension(5, 5));
        individual.setOpaque(false);
        individual.setPreferredSize(new java.awt.Dimension(5, 5));
        individual.setLayout(new java.awt.BorderLayout());
        jScrollPane5.setViewportView(individual);
        individual.getAccessibleContext().setAccessibleName("3) Segmentar figuras que se parecem com notas musicais ");

        Container.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1240, 1890, 430));

        jScrollPane3.setViewportView(Container);

        jPanel5.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        Panels.addTab("Etapas", jPanel5);

        fragmentos.setLayout(new java.awt.BorderLayout());

        treinamento.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Caminho:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        CAMINHO.setText("C:/Users/ascarneiro/Desktop/TCC/ScoreReader/Server/MUSCIMA/");
        CAMINHO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CAMINHOMouseClicked(evt);
            }
        });
        CAMINHO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CAMINHOKeyPressed(evt);
            }
        });
        jPanel3.add(CAMINHO, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 370, -1));

        STATUS.setEditable(false);
        STATUS.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        STATUS.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        STATUS.setText("D.S");
        STATUS.setToolTipText("Quanto estiver verde o DataSource esta carregado. Caso contrario clique em  Carregar e Aguarde");
        STATUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                STATUSActionPerformed(evt);
            }
        });
        jPanel3.add(STATUS, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 60, 30));

        jLabel7.setText("DataSource:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        DS_NAME.setText("data/cropobjects_manual");
        DS_NAME.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DS_NAMEMouseClicked(evt);
            }
        });
        DS_NAME.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DS_NAMEKeyPressed(evt);
            }
        });
        jPanel3.add(DS_NAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 370, -1));

        jToggleButton3.setText("Plotar Distribuicao");
        jToggleButton3.setToolTipText("Teste rapido de classificacao");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jToggleButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 420, 140, 30));

        K.setText("5");
        K.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KActionPerformed(evt);
            }
        });
        jPanel3.add(K, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 90, -1));

        jLabel10.setText("K-vizinhos:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 150, 20));

        jToggleButton5.setText("Treinar");
        jToggleButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jToggleButton5MouseClicked(evt);
            }
        });
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jToggleButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 110, 30));

        jButton2.setText("Salvar Treino");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 140, 30));

        SEMIBREVE_SL.setValue(3);
        SEMIBREVE_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SEMIBREVE_SLStateChanged(evt);
            }
        });
        jPanel3.add(SEMIBREVE_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 360, -1));

        jLabel12.setText("Semibreve:");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 60, 20));
        jPanel3.add(SEMIBREVE, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 60, -1));

        jLabel13.setText("Minimas:");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 50, 20));
        jPanel3.add(MINIMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 60, -1));

        MINIMA_SL.setValue(3);
        MINIMA_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MINIMA_SLStateChanged(evt);
            }
        });
        jPanel3.add(MINIMA_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 360, -1));

        SEMINIMA_SL.setValue(3);
        SEMINIMA_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SEMINIMA_SLStateChanged(evt);
            }
        });
        jPanel3.add(SEMINIMA_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 360, -1));

        jLabel15.setText("Seminimas:");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 60, 20));
        jPanel3.add(SEMINIMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 60, -1));

        COLCHEIA_SL.setValue(3);
        COLCHEIA_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                COLCHEIA_SLStateChanged(evt);
            }
        });
        jPanel3.add(COLCHEIA_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 360, -1));
        jPanel3.add(COLCHEIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 60, -1));

        jLabel17.setText("Colcheias:");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 50, 20));

        jLabel20.setText("Clave Sol:");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 50, 20));

        CLAVE_SOL_SL.setValue(3);
        CLAVE_SOL_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CLAVE_SOL_SLStateChanged(evt);
            }
        });
        jPanel3.add(CLAVE_SOL_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 360, -1));
        jPanel3.add(CLAVE_SOL, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 60, -1));
        jPanel3.add(CLAVE_FA, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 60, -1));

        CLAVE_FA_SL.setValue(3);
        CLAVE_FA_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CLAVE_FA_SLStateChanged(evt);
            }
        });
        jPanel3.add(CLAVE_FA_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 360, -1));

        jLabel21.setText("Clave Fa:");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 50, 20));
        jPanel3.add(CLAVE_DO, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 60, -1));

        CLAVE_DO_SL.setValue(3);
        CLAVE_DO_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                CLAVE_DO_SLStateChanged(evt);
            }
        });
        jPanel3.add(CLAVE_DO_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 330, 360, -1));

        jLabel22.setText("Clave Do:");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 50, 20));

        PAUSA_SEMIBREVE.setText("Incluir pausas");
        jPanel3.add(PAUSA_SEMIBREVE, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, -1, -1));

        PAUSA_MINIMAS.setText("Incluir pausas");
        jPanel3.add(PAUSA_MINIMAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 150, -1, -1));

        PAUSA_SEMINIMA.setText("Incluir pausas");
        jPanel3.add(PAUSA_SEMINIMA, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, -1, -1));

        PAUSA_COLCHEIA.setText("Incluir pausas");
        jPanel3.add(PAUSA_COLCHEIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, -1, -1));

        jLabel23.setText("Semi Colcheias:");
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 80, 20));
        jPanel3.add(SEMICOLCHEIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 60, -1));

        SEMICOLCHEIA_SL.setValue(3);
        SEMICOLCHEIA_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SEMICOLCHEIA_SLStateChanged(evt);
            }
        });
        jPanel3.add(SEMICOLCHEIA_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 360, -1));

        PAUSA_SEMICOLCHEIA.setText("Incluir pausas");
        jPanel3.add(PAUSA_SEMICOLCHEIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 240, -1, -1));

        jButton3.setText("Trein. Padrao");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, 130, 30));

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("KNN");
        jPanel3.add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, -1, -1));

        NOME_MODELO.setEditable(true);
        NOME_MODELO.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "KNN_PADRAO" }));
        jPanel3.add(NOME_MODELO, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 190, -1));

        DUMP.setSelected(true);
        DUMP.setLabel("Carregar metadados");
        jPanel3.add(DUMP, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, -1, -1));

        jLabel26.setText("Tipo distribuicao:");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 90, 20));
        jPanel3.add(QT_BARRAS_COMPASSO, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, 60, -1));

        BARRAS_COMPASSO_SL.setValue(3);
        BARRAS_COMPASSO_SL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BARRAS_COMPASSO_SLStateChanged(evt);
            }
        });
        jPanel3.add(BARRAS_COMPASSO_SL, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 360, -1));

        jLabel2.setText("Fator Distancia:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, -1, 20));

        FATOR.setText("3");
        FATOR.setToolTipText("Informe aqui um fator para calulo da altura das linhas");
        jPanel3.add(FATOR, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 20, -1));

        TIPO_MODELO.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DIGITAL", "MANUSCRITO", "ANTIGO" }));
        TIPO_MODELO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TIPO_MODELOActionPerformed(evt);
            }
        });
        jPanel3.add(TIPO_MODELO, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 60, 190, 20));

        TIPO_DISTRIBUICAO.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "KNN_PCA", "KNN_LDA", "KMEANS", "KMEANS_CENTROIDS", "PROPRIO" }));
        TIPO_DISTRIBUICAO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TIPO_DISTRIBUICAOActionPerformed(evt);
            }
        });
        jPanel3.add(TIPO_DISTRIBUICAO, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 130, 30));

        jLabel27.setText("Barra compasso");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 80, 20));

        treinamento.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 710, 480));

        distribuicao.setBackground(new java.awt.Color(255, 255, 255));
        distribuicao.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        distribuicao.setMaximumSize(new java.awt.Dimension(10, 10));
        distribuicao.setOpaque(false);
        distribuicao.setPreferredSize(new java.awt.Dimension(10, 10));
        distribuicao.setLayout(new java.awt.GridLayout(1, 0));
        treinamento.add(distribuicao, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 1160, 480));

        fragmentos.add(treinamento, java.awt.BorderLayout.CENTER);

        Panels.addTab("Treinamento", fragmentos);

        jSplitPane1.setTopComponent(Panels);

        jPanel6.setLayout(new java.awt.BorderLayout());

        CONSOLE.setColumns(20);
        CONSOLE.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        CONSOLE.setRows(5);
        CONSOLE.setToolTipText("Console de erros e mensagens");
        jScrollPane1.setViewportView(CONSOLE);

        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jToggleButton10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jToggleButton10.setText("clear");
        jToggleButton10.setToolTipText("Limpa o console");
        jToggleButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton10ActionPerformed(evt);
            }
        });
        jPanel6.add(jToggleButton10, java.awt.BorderLayout.EAST);

        jSplitPane1.setBottomComponent(jPanel6);

        jPanel4.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        try {
            //Carregar imagem   
            JFileChooser jfc = new JFileChooser(CAMINHO_DEFAULT);
            if (jfc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                FILE_NAME.setText(jfc.getSelectedFile().toPath().toString());
                originalImage = Files.readAllBytes(new File(FILE_NAME.getText()).toPath());
                addImagemOriginal(new File(FILE_NAME.getText()).getAbsolutePath());
            }
            removeuLinhas = false;
        } catch (Exception e) {
            log_console("Falha ao carregar arquivos :\n" + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    public void habilitarDesabilitarBotoes(boolean habilitar) {
        habilitar = true;
        A.setEnabled(habilitar);
        B.setEnabled(habilitar);
        C.setEnabled(habilitar);
        D.setEnabled(habilitar);
        E.setEnabled(habilitar);
        fragmentos.setVisible(habilitar);
        Compilar.setEnabled(habilitar);

    }

    private void processarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processarActionPerformed
        log_console("Partitura sendo processada, por gentileza aguarde, isso pode levar um certo tempo...");
        Thread t = new Thread() {

            @Override
            public void run() {
                tempoInicial = System.currentTimeMillis();
                Server.server = SERVER.getText();
                if (!FILE_NAME.getText().isEmpty()) {

                    try {
                        int fator = Integer.parseInt(FATOR.getText());
                        originalImage = Files.readAllBytes(new File(FILE_NAME.getText()).toPath());

                        byte[] imageData = originalImage;
                        if (!removeuLinhas) {
                            //Remove linhas da pauta    
                            imageData = Utilities.removerLinhasDaPauta(originalImage);
                        }

                        //Converte 
                        opencv_core.IplImage imagemSemLinhas = Utilities.bufferedImageToIplImage(imageData);
                        opencv_core.IplImage imagemBinarizada = Utilities.binarizar(imagemSemLinhas.clone());
                        opencv_core.IplImage imageCopy = imagemBinarizada.clone();

                        segmentadosPanel.limpar();
                        boundedPanel.limpar();

                        rotular.clear();

                        //Etapa de segmentacao
                        ArrayList<Figura> figuras = Utilities.segmentar(imagemBinarizada, imageCopy);
                        for (Figura figura : figuras) {
                            addImagemSegmentados(figura.fileName);
                            rotular.add(figura);
                        }
                        //Etapa obtem informacoes relativas a pauta, Linhas, Posicao das linhas etc
                        pautas = Utilities.obterInformacoesPautas(originalImage);
                        //Determina o meio dos espacos da pauta
                        for (Pauta clave : pautas) {
                            clave.calcularEspacos();//Pocessa espacos
                        }
                        //Adiciona as figuras que pertencem a pauta
                        for (Pauta pauta : pautas) {
                            for (Figura figura : figuras) {
                                if (pauta.figuraDentroDaPauta(figura)) {
                                    pauta.addFiguraPauta(figura);
                                }
                            }
                        }
                        ArrayList<Nota> notas = Utilities.detectarAlturaNotas(imagemSemLinhas);
                        for (Pauta pauta : pautas) {
                            for (Nota nota : notas) {
                                if (pauta.notaDentroDaPauta(nota)) {
                                    pauta.addNotaPauta(nota);
                                }
                            }
                        }
                        //chama metodo da clave para determinar notas pertencentes a ela
                        for (Pauta clave : pautas) {
                            clave.determinarNotasPauta();
                        }
                        //chama metodo da clave para determinar altura das figuras que sao notas
                        for (Pauta clave : pautas) {
                            clave.determinarAlturaNotasPauta();
                        }
                        for (Pauta clave : pautas) {
                            clave.classificarFiguras(K.getText());
                        }
                        log_console("Partitura processada com sucesso...");
                        loadFragments();
                        loadBounded();

                        Compilar.setEnabled(true);

                        DateFormat df = new SimpleDateFormat("dd:MM:yy:HH:mm:ss.SSS");
                        log_console(("Tempo: " + df.format(tempoInicial - System.currentTimeMillis())));

                    } catch (Exception e) {
                        log_console("Falha ao processar elementos da partitura: \n" + e.getMessage());
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um arquivo com extencao .PNG de partitura digitalizada \n"
                            + "Arquivo precisa estar com alta resolucao.");
                }
            }

        };
        t.start();


    }//GEN-LAST:event_processarActionPerformed

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        try {
            String dir = parser.getAbcFile();
            if (!dir.isEmpty()) {
                Desktop.getDesktop().open(new File(dir));
            }
        } catch (Exception e) {
            log_console("Falha ao carregar arquivo ABC: \n" + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_AActionPerformed

    private void CompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompilarActionPerformed

        log_console("Compilando codigo ABC, este processo pode ser demorado, por favor aguarde");
        Thread t = new Thread() {

            @Override
            public void run() {
                try {
                    scoreDir = parser.compile(FILE_NAME.getText(), pautas);
                    log_console("Codigo compilado com sucesso");
                    //habilitarDesabilitarBotoes(true);
                } catch (Exception e) {
                    log_console("Falha ao Compilar Codigo ABC: \n" + e.getMessage());
                }
            }

        };
        t.start();
    }//GEN-LAST:event_CompilarActionPerformed

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        try {
            String dir = parser.getFileXHTML();
            if (!dir.isEmpty()) {
                Desktop.getDesktop().open(new File(dir));
            }
        } catch (Exception e) {
            log_console("Falha ao carregar arquivo SVG: \n" + e.getMessage());
            e.printStackTrace();

        }
    }//GEN-LAST:event_BActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        try {
            String dir = parser.getFileMidi();
            if (!dir.isEmpty()) {
                Desktop.getDesktop().open(new File(dir));
            }
        } catch (Exception e) {
            log_console("Falha ao carregar arquivo MIDI: \n" + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_DActionPerformed

    private void debugImagesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_debugImagesMouseClicked

        Utilities.DEBUG_IMAGES = debugImages.isSelected();
    }//GEN-LAST:event_debugImagesMouseClicked

    private void debugFIlesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_debugFIlesMouseClicked
        Utilities.DEBUG_VALUES = debugFIles.isSelected();
    }//GEN-LAST:event_debugFIlesMouseClicked

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        try {
            String dir = parser.getFilePDF();
            if (!dir.isEmpty()) {
                Desktop.getDesktop().open(new File(dir));
            }
        } catch (Exception e) {
            log_console("Falha ao carregar arquivo PDF: \n" + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_CActionPerformed

    private void jToggleButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton10ActionPerformed
        consoleContent = new StringBuilder();
        CONSOLE.setText("");
    }//GEN-LAST:event_jToggleButton10ActionPerformed

    private void EActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EActionPerformed
        try {
            String dir = parser.getFileSvg();
            if (!dir.isEmpty()) {
                Desktop.getDesktop().open(new File(dir));
            }
        } catch (Exception e) {
            log_console("Falha ao carregar arquivo PDF: \n" + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_EActionPerformed

    private void debugFIlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debugFIlesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_debugFIlesActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        loadModelo();
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void PanelsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PanelsStateChanged
        if (Panels.getSelectedIndex() == 0
                || Panels.getSelectedIndex() == 2) {
            jSplitPane1.setDividerLocation(540);
        } else {
            jSplitPane1.setDividerLocation(10000);
        }

        jSplitPane1.updateUI();
    }//GEN-LAST:event_PanelsStateChanged

    private void SEMICOLCHEIA_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SEMICOLCHEIA_SLStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_SEMICOLCHEIA_SLStateChanged

    private void CLAVE_DO_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CLAVE_DO_SLStateChanged
        CLAVE_DO.setValue(CLAVE_DO_SL.getValue() * incremento);
    }//GEN-LAST:event_CLAVE_DO_SLStateChanged

    private void CLAVE_FA_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CLAVE_FA_SLStateChanged
        CLAVE_FA.setValue(CLAVE_FA_SL.getValue() * incremento);
    }//GEN-LAST:event_CLAVE_FA_SLStateChanged

    private void CLAVE_SOL_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_CLAVE_SOL_SLStateChanged
        CLAVE_SOL.setValue(CLAVE_SOL_SL.getValue() * incremento);
    }//GEN-LAST:event_CLAVE_SOL_SLStateChanged

    private void COLCHEIA_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_COLCHEIA_SLStateChanged
        COLCHEIA.setValue(COLCHEIA_SL.getValue() * incremento);
    }//GEN-LAST:event_COLCHEIA_SLStateChanged

    private void SEMINIMA_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SEMINIMA_SLStateChanged
        SEMINIMA.setValue(SEMINIMA_SL.getValue() * incremento);
    }//GEN-LAST:event_SEMINIMA_SLStateChanged

    private void MINIMA_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MINIMA_SLStateChanged
        MINIMA.setValue(MINIMA_SL.getValue() * incremento);
    }//GEN-LAST:event_MINIMA_SLStateChanged

    private void SEMIBREVE_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SEMIBREVE_SLStateChanged
        SEMIBREVE.setValue(SEMIBREVE_SL.getValue() * incremento);
    }//GEN-LAST:event_SEMIBREVE_SLStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            log_console(Utilities.salvarTreino());
        } catch (Exception e) {
            log_console("Falha ao salvar Modelo: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        try {
            STATUS.setBackground(Color.ORANGE);
            fragmentos.setBackground(Color.WHITE);
            habilitarDesabilitarBotoes(false);

            log_console("Treinando modelo customizado, por gentileza aguarde...");
            Server.server = SERVER.getText();
            Thread t = new Thread() {

                @Override
                public void run() {
                    try {
                        HashMap parametros = new HashMap();
                        parametros.put("QT_SEMIBREVE", SEMIBREVE.getValue().toString());
                        parametros.put("QT_MINIMA", MINIMA.getValue().toString());
                        parametros.put("QT_SEMINIMA", SEMINIMA.getValue().toString());
                        parametros.put("QT_COLCHEIA", COLCHEIA.getValue().toString());
                        parametros.put("QT_SEMICOLCHEIA", SEMICOLCHEIA.getValue().toString());
                        parametros.put("QT_FUSA", 0);
                        parametros.put("QT_SEMIFUSA", 0);
                        parametros.put("QT_CLAVESOL", CLAVE_SOL.getValue().toString());
                        parametros.put("QT_CLAVEFA", CLAVE_FA.getValue().toString());
                        parametros.put("QT_CLAVEDO", CLAVE_DO.getValue().toString());
                        parametros.put("QT_FERMATA", 0);
                        parametros.put("QT_LIGADURA", 0);
                        parametros.put("PAUSA_SEMIBREVE", PAUSA_SEMIBREVE.isSelected() ? "S" : "N");
                        parametros.put("PAUSA_MINIMA", PAUSA_MINIMAS.isSelected() ? "S" : "N");
                        parametros.put("PAUSA_SEMINIMA", PAUSA_SEMINIMA.isSelected() ? "S" : "N");
                        parametros.put("PAUSA_COLCHEIA", PAUSA_COLCHEIA.isSelected() ? "S" : "N");
                        parametros.put("PAUSA_SEMICOLCHEIA", PAUSA_SEMICOLCHEIA.isSelected() ? "S" : "N");
                        parametros.put("PAUSA_FUSA", "N");
                        parametros.put("PAUSA_SEMIFUSA", "N");
                        parametros.put("QT_BARRAS_COMPASSO", QT_BARRAS_COMPASSO.getValue().toString());

                        String modelo = Utilities.treinarKnnCustomizado(
                                TIPO_MODELO.getSelectedItem().toString(),
                                NOME_MODELO.getSelectedItem().toString(),
                                CAMINHO.getText(),
                                DS_NAME.getText(),
                                "S",
                                parametros,
                                DUMP.isSelected() ? "S" : "N");

                        STATUS.setBackground(Color.GREEN);
                        processar.setEnabled(true);
                        resetar = "N";
//                        addImagemChart(CAMINHO_TREINAMENTO + "chart.png");
                        log_console("Arquivo gerado: !" + modelo);
                        log_console("Modelo customizado treinado e carregado com sucesso!");
                    } catch (Exception e) {
                        resetar = "S";
                        STATUS.setBackground(Color.ORANGE);
                        processar.setEnabled(false);
                    }
                }

            };
            t.start();

        } catch (Exception e) {
            STATUS.setBackground(Color.ORANGE);
            processar.setEnabled(false);
            log_console("Falha ao carregar dataSource, verifique se \n"
                    + "o servidor esta acessivel ou se ocorreu \n"
                    + "algum erro o log do servidor");

        }

    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jToggleButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jToggleButton5MouseClicked
        try {
            Server.server = SERVER.getText();
        } catch (Exception e) {
            processar.setEnabled(false);
            STATUS.setBackground(Color.ORANGE);
            log_console("Falha ao carregar dataSource, verifique se o servidor esta acessivel ou \n "
                    + " se ocorreu algum erro o log do servidor");

        }
    }//GEN-LAST:event_jToggleButton5MouseClicked

    private void KActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KActionPerformed

    }//GEN-LAST:event_KActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        log_console("Aguarde, Plotando Grafico. Dependendo do tamanho do conjunto pode levar alguns minutos........ ");
        Thread t = new Thread() {

            @Override
            public void run() {
                try {
                    String ret = Utilities.showDistribuicao(TIPO_DISTRIBUICAO.getSelectedItem().toString());
                    log_console("Distribuicao " + TIPO_DISTRIBUICAO.getSelectedItem().toString());
                    addImagemDistribuicao(CAMINHO_TREINAMENTO + "\\distribuicao.png");

                } catch (Exception e) {
                    log_console("Falha ao carregar arquivo PDF: \n" + e.getMessage());
                    e.printStackTrace();
                }
            }

        };
        t.start();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void DS_NAMEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DS_NAMEKeyPressed
        resetar = "S";
    }//GEN-LAST:event_DS_NAMEKeyPressed

    private void DS_NAMEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DS_NAMEMouseClicked
        resetar = "S";
    }//GEN-LAST:event_DS_NAMEMouseClicked

    private void STATUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_STATUSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_STATUSActionPerformed

    private void CAMINHOKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CAMINHOKeyPressed
        resetar = "S";
    }//GEN-LAST:event_CAMINHOKeyPressed

    private void CAMINHOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CAMINHOMouseClicked
        resetar = "S";
    }//GEN-LAST:event_CAMINHOMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            log_console("Treinando modelo, por gentileza aguarde...");
            STATUS.setBackground(Color.ORANGE);
            fragmentos.setBackground(Color.WHITE);
            habilitarDesabilitarBotoes(false);

            Server.server = SERVER.getText();
            Thread t = new Thread() {

                @Override
                public void run() {
                    try {

                        String modelo = Utilities.treinarKnnPadrao(
                                TIPO_MODELO.getSelectedItem().toString(),
                                NOME_MODELO.getSelectedItem().toString(),
                                CAMINHO.getText(),
                                DS_NAME.getText(),
                                "S",
                                DUMP.isSelected() ? "S" : "N");

                        STATUS.setBackground(Color.GREEN);
                        processar.setEnabled(true);
                        resetar = "N";
                        //addImagemChart(CAMINHO_TREINAMENTO + "chart.png");
                        log_console("Arquivo gerado: !" + modelo);
                        log_console("Modelo treinado e carregado com sucesso!");

                    } catch (Exception e) {
                        resetar = "S";
                        STATUS.setBackground(Color.ORANGE);
                        processar.setEnabled(false);
                    }
                }

            };
            t.start();

        } catch (Exception e) {
            STATUS.setBackground(Color.ORANGE);
            processar.setEnabled(false);
            log_console("Falha ao carregar dataSource, verifique se \n"
                    + "o servidor esta acessivel ou se ocorreu \n"
                    + "algum erro o log do servidor");

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void SERVERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SERVERActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SERVERActionPerformed

    private void BARRAS_COMPASSO_SLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BARRAS_COMPASSO_SLStateChanged
        QT_BARRAS_COMPASSO.setValue(BARRAS_COMPASSO_SL.getValue() * incremento);
    }//GEN-LAST:event_BARRAS_COMPASSO_SLStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            log_console("Abrindo Editor por favor aguarde...");
            EditorImagens e = new EditorImagens(this, Utilities.bufferedImageToIplImage2(originalImage));
            e.setLocationRelativeTo(this);
            e.setExtendedState(JFrame.MAXIMIZED_BOTH);
            e.setVisible(true);

            BufferedImage IplImageToBufferedImage = Utilities.IplImageToBufferedImage(e.getImagemAlterada());
            originalImage = Utilities.bufferedImageToByteArray(IplImageToBufferedImage);
            log_console("Editor carregado...");

        } catch (Exception e) {
            e.printStackTrace();
            log_console("Erro ao abrir editor: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            log_console("Abrindo Rotulador por gentileza aguarde...");
            //Remove linhas da pauta    
            byte[] imageData = Utilities.removerLinhasDaPauta(originalImage);

            //Converte 
            opencv_core.IplImage imagemSemLinhas = Utilities.bufferedImageToIplImage(imageData);
            opencv_core.IplImage imagemCinza = Utilities.binarizar(imagemSemLinhas.clone());
            opencv_core.IplImage imageCopy = imagemCinza.clone();

            //Etapa de segmentacao
            ArrayList<Figura> figuras = Utilities.segmentar(imagemCinza, imageCopy);

            if (!figuras.isEmpty()) {
                EditorRotular rotulador = new EditorRotular(figuras);
                rotulador.setLocationRelativeTo(this);
                rotulador.setExtendedState(JFrame.MAXIMIZED_BOTH);
                log_console("Rotulador Carregado...");
                rotulador.setVisible(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
            log_console(e.getMessage());
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void TIPO_MODELOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TIPO_MODELOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TIPO_MODELOActionPerformed

    private void TIPO_DISTRIBUICAOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TIPO_DISTRIBUICAOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TIPO_DISTRIBUICAOActionPerformed

    private void D1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D1ActionPerformed
        try {
            String dir = parser.getFileMUSICXML();
            if (!dir.isEmpty()) {
                Desktop.getDesktop().open(new File(dir));
            }
        } catch (Exception e) {
            log_console("Falha ao carregar arquivo PDF: \n" + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_D1ActionPerformed

    private void FILE_NAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FILE_NAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FILE_NAMEActionPerformed

    private void MODELOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MODELOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MODELOActionPerformed

    private void SERVERKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SERVERKeyTyped
        Server.server = SERVER.getText();
    }//GEN-LAST:event_SERVERKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScoreReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScoreReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScoreReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScoreReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ScoreReader sc = new ScoreReader();

                sc.setSize(1, 1);
                sc.setSize(1024, 768);
                sc.setLocationRelativeTo(null);
                sc.setExtendedState(6);
                sc.setVisible(true);

            }
        });
    }

    public void log_console(String texto) {
        consoleContent.append("---  " + texto);
        CONSOLE.setText(consoleContent.append("\n").toString());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton A;
    private javax.swing.JToggleButton B;
    private javax.swing.JSlider BARRAS_COMPASSO_SL;
    private javax.swing.JToggleButton C;
    private javax.swing.JTextField CAMINHO;
    private javax.swing.JSpinner CLAVE_DO;
    private javax.swing.JSlider CLAVE_DO_SL;
    private javax.swing.JSpinner CLAVE_FA;
    private javax.swing.JSlider CLAVE_FA_SL;
    private javax.swing.JSpinner CLAVE_SOL;
    private javax.swing.JSlider CLAVE_SOL_SL;
    private javax.swing.JSpinner COLCHEIA;
    private javax.swing.JSlider COLCHEIA_SL;
    private javax.swing.JTextArea CONSOLE;
    private javax.swing.JToggleButton Compilar;
    private javax.swing.JPanel Container;
    private javax.swing.JToggleButton D;
    private javax.swing.JToggleButton D1;
    private javax.swing.JTextField DS_NAME;
    private javax.swing.JCheckBox DUMP;
    private javax.swing.JToggleButton E;
    private javax.swing.JTextField FATOR;
    private javax.swing.JTextField FILE_NAME;
    private javax.swing.JTextField K;
    private javax.swing.JSpinner MINIMA;
    private javax.swing.JSlider MINIMA_SL;
    private javax.swing.JTextField MODELO;
    private javax.swing.JPanel Main;
    private javax.swing.JComboBox NOME_MODELO;
    private javax.swing.JCheckBox PAUSA_COLCHEIA;
    private javax.swing.JCheckBox PAUSA_MINIMAS;
    private javax.swing.JCheckBox PAUSA_SEMIBREVE;
    private javax.swing.JCheckBox PAUSA_SEMICOLCHEIA;
    private javax.swing.JCheckBox PAUSA_SEMINIMA;
    private javax.swing.JTabbedPane Panels;
    private javax.swing.JSpinner QT_BARRAS_COMPASSO;
    private javax.swing.JSpinner SEMIBREVE;
    private javax.swing.JSlider SEMIBREVE_SL;
    private javax.swing.JSpinner SEMICOLCHEIA;
    private javax.swing.JSlider SEMICOLCHEIA_SL;
    private javax.swing.JSpinner SEMINIMA;
    private javax.swing.JSlider SEMINIMA_SL;
    private javax.swing.JTextField SERVER;
    private javax.swing.JTextField STATUS;
    private javax.swing.JComboBox TIPO_DISTRIBUICAO;
    private javax.swing.JComboBox TIPO_MODELO;
    private javax.swing.JPanel bars;
    private javax.swing.JPanel bounded;
    private javax.swing.JCheckBox debugFIles;
    private javax.swing.JCheckBox debugImages;
    private javax.swing.JPanel distribuicao;
    private javax.swing.JPanel fragmentos;
    private javax.swing.JPanel individual;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToggleButton jToggleButton10;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JPanel notes;
    private javax.swing.JPanel original;
    private javax.swing.JToggleButton processar;
    private javax.swing.JPanel segmentados;
    private javax.swing.JPanel treinamento;
    // End of variables declaration//GEN-END:variables

    private void loadBounded() {

        String s = CAMINHO_REPOSITORY + "\\bounded.png";
        addImagemBounded(new File(s).getAbsolutePath());

        s = CAMINHO_REPOSITORY + "\\posicaoLinhas.png";
        addImagemBar(new File(s).getAbsolutePath());

        s = CAMINHO_REPOSITORY + "\\alturaNotas.png";
        addImagemNotes(new File(s).getAbsolutePath());
    }

    private void loadFragments() {
        try {

            individualPanel.limpar();
            int i = 0;
            for (Pauta pauta : pautas) {
                for (Figura figura : pauta.getFigurasPauta()) {
                    if (figura.isNotaMusical()) {
                        ByteArrayInputStream bais = new ByteArrayInputStream(figura.getImage());
                        BufferedImage read = ImageIO.read(bais);
                        File f = new File(CAMINHO_NOTAS + i + ".png");
                        ImageIO.write(read, "PNG", f);
                        addImagemIndividual(f.getAbsolutePath(), figura.getTipo());

                    }
                    i++;
                }
            }

            int index = 0;
            for (Pauta pauta : pautas) {

                for (Figura figura : pauta.getFigurasPauta()) {
                    String log = "Index: " + index + " Figura: " + figura.tipo;
                    if (figura.isNotaMusical()) {
                        log = "Index: " + index + " Nota: " + figura.nota.nome + " Figura: " + figura.tipo;
                    }

                    System.out.println(log);
                    log_console(log);
                    index++;
                }

            }

            System.out.println(System.currentTimeMillis());

        } catch (Exception e) {
            e.printStackTrace();
            log_console("Falha ao carregar imagens");
        }
    }

    private void addImagemBounded(String caminho) {
        boundedPanel.addImagem(caminho, true);

    }

    private void addImagemBar(String caminho) {
        barPanel.addImagem(caminho, true);
    }

    private void addImagemNotes(String caminho) {
        notesPanel.addImagem(caminho, true);
    }

    private void addImagemOriginal(String caminho) {
        originalPanel.addImagem(caminho, true);
    }

    public void atualizarImagemOriginal(opencv_core.IplImage ipl) {
        BufferedImage IplImageToBufferedImage = Utilities.IplImageToBufferedImage(ipl);
        ImageIcon imageIcon = new ImageIcon(Utilities.bufferedImageToByteArray(IplImageToBufferedImage));
        originalPanel.atualizarImagem(imageIcon, loadTreino);
    }

    private void addImagemIndividual(String caminho, String tipo) {
        individualPanel.addImagem(caminho, false);
    }

    private void addImagemSegmentados(String caminho) {
        segmentadosPanel.addImagem(caminho, false);
    }

    private void addImagemDistribuicao(String caminho) {
        distribuicaoPanel.addImagem(caminho, true);
    }

    private void loadPanels() {
        boundedPanel.setOpaque(true);
        barPanel.setOpaque(true);
        barPanel.setOpaque(true);
        notesPanel.setOpaque(true);
        originalPanel.setOpaque(true);
        individualPanel.setOpaque(true);
        segmentadosPanel.setOpaque(true);
        distribuicaoPanel.setOpaque(true);
        addImagemBounded(null);
        addImagemBar(null);
        addImagemNotes(null);
        addImagemOriginal(null);
        addImagemIndividual(null, "");
        addImagemSegmentados(null);
        addImagemDistribuicao(null);
        bounded.add(boundedPanel);
        bars.add(barPanel);
        notes.add(notesPanel);
        original.add(originalPanel);
        individual.add(individualPanel);
        segmentados.add(segmentadosPanel);
        distribuicao.add(distribuicaoPanel);
    }

    private void loadModelo() {
        try {
            Server.server = SERVER.getText();

            JFileChooser jfc = new JFileChooser(CAMINHO_TREINAMENTO);
            if (jfc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION
                    || !loadTreino) {
                MODELO.setText(jfc.getSelectedFile().toPath().toString());
                Server.server = SERVER.getText();
                log_console("Carregando modelo " + MODELO.getText());
                Utilities.carregarModelo(MODELO.getText(), MODELO.getText());
                log_console("Modelo carregado");
            }

        } catch (Exception e) {
            log_console("Falha ao ler modelo " + MODELO.getText());
        }

    }

    private void loadTrainValues() {
        int value = incremento;

        SEMIBREVE_SL.setValue(value);
        SEMICOLCHEIA_SL.setValue(value);
        CLAVE_SOL_SL.setValue(0);
        CLAVE_FA_SL.setValue(0);
        CLAVE_DO_SL.setValue(0);

        BARRAS_COMPASSO_SL.setValue(0);
        MINIMA_SL.setValue(value);
        COLCHEIA_SL.setValue(value);

        SEMICOLCHEIA_SL.setValue(value);
        SEMINIMA_SL.setValue(value);

        MINIMA.setValue(value);
        SEMIBREVE.setValue(value);
        SEMINIMA.setValue(value);

        COLCHEIA.setValue(value);
        SEMICOLCHEIA.setValue(value);

        CLAVE_DO.setValue(0);
        CLAVE_FA.setValue(0);
        CLAVE_SOL.setValue(0);

        QT_BARRAS_COMPASSO.setValue(0);
    }
}
